USE AdventureWorks2012;
GO

/*
a) выполните код, созданный во втором задании второй лабораторной работы.
ƒобавьте в таблицу dbo.Person пол€ TotalGroupSales MONEY и SalesYTD MONEY.
“акже создайте в таблице вычисл€емое поле RoundSales, округл€ющее значение в поле SalesYTD до целого числа.
*/
ALTER TABLE dbo.Person
ADD TotalGroupSales MONEY, SalesYTD MONEY, RoundSales AS (ROUND(SalesYTD, 0));

/*
b) создайте временную таблицу #Person, с первичным ключом по полю BusinessEntityID.
¬ременна€ таблица должна включать все пол€ таблицы dbo.Person за исключением пол€ RoundSales.
*/
CREATE TABLE dbo.#Person (
	BusinessEntityID INT NOT NULL,
	PersonType NCHAR(2) NOT NULL,
	NameStyle BIT NOT NULL,
	Title NVARCHAR(4) NOT NULL,
	FirstName NVARCHAR(50) NOT NULL,
	MiddleName NVARCHAR(50) NULL,
	LastName NVARCHAR(50) NOT NULL,
	Suffix NVARCHAR(10) NULL,
	EmailPromotion INT NOT NULL,
	ModifiedDate DATETIME NOT NULL,
	TotalGroupSales MONEY,
	SalesYTD MONEY
	PRIMARY KEY(BusinessEntityID)
)

/*
c) заполните временную таблицу данными из dbo.Person.
ѕоле SalesYTD заполните значени€ми из таблицы Sales.SalesTerritory.
ѕосчитайте общую сумму продаж (SalesYTD) дл€ каждой группы территорий (Group)
в таблице Sales.SalesTerritory и заполните этими значени€ми поле TotalGroupSales.
ѕодсчет суммы продаж осуществите в Common Table Expression (CTE).
*/
WITH SALES_CTE AS (SELECT st."Group", SUM(st.SalesYTD) TotalGroupSales
FROM Sales.SalesTerritory st
GROUP BY st."Group")

INSERT INTO dbo.#Person (
	BusinessEntityID,
	PersonType,
	NameStyle,
	Title,
	FirstName,
	MiddleName,
	LastName,
	Suffix,
	EmailPromotion,
	ModifiedDate,
	TotalGroupSales,
	SalesYTD
) SELECT
	p.BusinessEntityID,
	p.PersonType,
	p.NameStyle,
	p.Title,
	p.FirstName,
	p.MiddleName,
	p.LastName,
	p.Suffix,
	p.EmailPromotion,
	p.ModifiedDate,
	t.TotalGroupSales,
	st.SalesYTD
FROM dbo.Person p
INNER JOIN Sales.Customer c ON c.PersonID = p.BusinessEntityID
INNER JOIN Sales.SalesTerritory st ON st.TerritoryID = c.TerritoryID
INNER JOIN SALES_CTE t ON st."Group" = t."Group";

SELECT * FROM dbo.#Person;

/*
d) удалите из таблицы dbo.Person строки, где EmailPromotion = 2
*/
DELETE FROM dbo.Person WHERE EmailPromotion = 2;

/*
e) напишите Merge выражение, использующее dbo.Person как target, а временную таблицу как source.
ƒл€ св€зи target и source используйте BusinessEntityID.
ќбновите пол€ TotalGroupSales и SalesYTD, если запись присутствует в source и target.
≈сли строка присутствует во временной таблице, но не существует в target, добавьте строку в dbo.Person.
≈сли в dbo.Person присутствует така€ строка, которой не существует во временной таблице, удалите строку из dbo.Person.
*/
MERGE INTO dbo.Person dest
USING dbo.#Person src
ON dest.BusinessEntityID = src.BusinessEntityID
WHEN MATCHED THEN UPDATE SET
	dest.TotalGroupSales = src.TotalGroupSales,
	dest.SalesYTD = src.SalesYTD
WHEN NOT MATCHED BY TARGET THEN	INSERT (
	BusinessEntityID,
	PersonType,
	NameStyle,
	Title,
	FirstName,
	MiddleName,
	LastName,
	Suffix,
	EmailPromotion,
	ModifiedDate,
	TotalGroupSales,
	SalesYTD)
VALUES(
	src.BusinessEntityID,
	src.PersonType,
	src.NameStyle,
	src.Title,
	src.FirstName,
	src.MiddleName,
	src.LastName,
	src.Suffix,
	src.EmailPromotion,
	src.ModifiedDate,
	src.TotalGroupSales,
	src.SalesYTD)
WHEN NOT MATCHED BY SOURCE THEN DELETE;
GO

SELECT * FROM dbo.Person;